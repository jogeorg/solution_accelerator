package main

import (
	"fmt"
	"log"
	"os"
	"time"

	"gopkg.in/src-d/go-git.v4"
	"gopkg.in/src-d/go-git.v4/plumbing/object"
)

func addTeam(team string) {
	if err := os.Mkdir(team, os.ModePerm); err != nil {
		log.Fatal(err)
	}
}

func clone(repo string) {
	// Clone the given repository to the given directory
	_, err := git.PlainClone("/tmp", false, &git.CloneOptions{
		URL:      repo,
		Progress: os.Stdout,
	})
	if err != nil {
		log.Fatal(err)
	}
}

func commit(name string, email string, team string) {
	r, err := git.PlainOpen("/tmp")
	if err != nil {
		log.Fatal(err)
	}
	w, err := r.Worktree()
	if err != nil {
		log.Fatal(err)
	}
	_, err = w.Add(fmt.Sprintf("%s/go.tfvars", team))
	if err != nil {
		log.Fatal(err)
	}

	// add more detailed git message
	commit, err := w.Commit(fmt.Sprintf("file generated by %s", name), &git.CommitOptions{
		Author: &object.Signature{
			Name:  name,
			Email: email,
			When:  time.Now(),
		},
	})
	if err != nil {
		log.Fatal(err)
	}

	obj, err := r.CommitObject(commit)
	if err != nil {
		log.Fatal(err)
	}

	fmt.Println(obj)
}